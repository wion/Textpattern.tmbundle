<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>txpml</string>
		<string>txfml</string>
		<string>txaml</string>
		<string>html</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?x)
         (&lt;txp:(?i:comment_permlink|file_download_link|if_article_author|if_article_category|if_article_id|if_article_list|if_article_section|if_author|if_category|if_comments|if_comments_allowed|if_comments_disallowed|if_comments_error|if_comments_preview|if_custom_field|if_different|if_excerpt|if_first_article|if_individual_article|if_last_article|if_plugin|if_search|if_section|if_status|link_to_home|link_to_next|link_to_prev|newer|older|php)\b.*?&gt;
        )</string>
	<key>foldingStopMarker</key>
	<string>(?x)
        (&lt;/txp:(?i:comment_permlink|file_download_link|if_article_author|if_article_category|if_article_id|if_article_list|if_article_section|if_author|if_category|if_comments|if_comments_allowed|if_comments_disallowed|if_comments_error|if_comments_preview|if_comments_preview|if_custom_field|if_different|if_excerpt|if_first_article|if_individual_article|if_last_article|if_plugin|if_search|if_section|if_status|link_to_home|link_to_next|link_to_prev|newer|older|php)&gt;
        )</string>
	<key>keyEquivalent</key>
	<string>^~T</string>
	<key>name</key>
	<string>Textpattern </string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>&lt;(txp:)(php)&gt;</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.php.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.php.txp</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Temporary as a workaround, since embedding php here doesnt work. to replaced with a new Language Grammar at some point</string>
			<key>end</key>
			<string>&lt;(/txp:)(php)&gt;</string>
			<key>name</key>
			<string>source.php.embedded.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.smarty</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;!\[CDATA\[</string>
			<key>end</key>
			<string>]]&gt;</string>
			<key>name</key>
			<string>string.unquoted.cdata.txp</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;!--</string>
			<key>end</key>
			<string>--&gt;</string>
			<key>name</key>
			<string>string.unquoted.htmlcomment.txp</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;txp:anc_hide&gt;</string>
			<key>end</key>
			<string>&lt;/txp:anc_hide&gt;</string>
			<key>name</key>
			<string>string.unquoted.txp.htmlcomment.txp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.email.name-part</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.citicode</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.constant.domain</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>string.constant.tld-extension</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\b[\w\d._%-]+)@((\w){3}.)?([\w\d.-]+)(\.[\w]{2,3}\b)</string>
			<key>name</key>
			<string>string.other.email.txp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#article-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#article_custom-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#article_id-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#article_image-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#author-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#body-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#breadcrumb-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#category_list-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#category-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_anchor-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_email_input-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_email-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_id-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_message_input-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_message-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_name_input-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_name-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_permlink-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_preview-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_remember-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_submit-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_time-tagatts</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_time-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_web_preview-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_web-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments_count-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments_error-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments_form-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments_help-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments_invite-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments_preview-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#css-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#custom_field-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#die-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#else-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#email-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#error_message-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#error_status-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#excerpt-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#feed_link-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_category-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_created-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_description-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_downloads-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_id-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_link-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_list-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_modified-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_name-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download_size-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#file_download-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_article_author-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_article_category-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_article_id-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_article_list-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_article_section-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_category-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_comments_error-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_comments_allowed-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_comments_disallowed-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_comments_preview-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_comments-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_custom_field-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_different-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_excerpt-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_first_article-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_individual_article-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_last_article-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_search-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_section-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_status-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_author-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#if_plugin-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#image-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#image_index-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#image_display-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lang-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_description-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_feed_link-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_to_home-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_to_next-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_to_prev-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#linkdesctitle-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#linklist-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_date-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_name-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#link_url-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#message-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#meta_author-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#meta_keywords-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#newer-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#next_title-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#older-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#output_form-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#page_title-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_web_input-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#page_url-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#password_protect-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#permlinks-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#permlink-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#popup-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#posted-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#prev_title-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#recent_articles-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#related_articles-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#search_input-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#search_result_count-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#search_result_date-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#search_result_excerpt-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#search_result_title-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#search_result_url-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#section_list-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#sitename-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#site_slogan-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#site_url-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#text-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#thumbnail-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#title-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#atts-generic-invalid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#atts-custom-valid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#section-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#popup_comments-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#plugin_start-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#plugin_end_special-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#plugin_end-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.html.strict</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>article-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(article)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.article.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#article-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>article-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(author|form|listform|sort|sortby|sortdir|limit|offset|keywords|month|category|custom_[1-9|10]|time|status|allowoverride|pageby|pgonly|searchall|searchsticky|id)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(asc|desc|default|home|about|contact|article|[\d+]|draft|hidden|pending|live|sticky|past|future|any|rand\(\))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.article.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>article_custom-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(article_custom)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article_custom.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article_custom</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article_custom.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article_custom</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.article_custom.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#article_custom-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>article_custom-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(author|section|listform|pgonly|month|excerpted|id|form|sortby|sortdir|limit|offset|pageby|keywords|category|custom_[1-9|10]|time|status|allowoverride|searchsticky|searchall|sort)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(default|id|AuthorID|LastMod|LastModID|Title|Category1|Category2|comments_count|Status|Section|Keywords|Image|[1-9]\d{,3}|asc|desc|past|future|any|live|hidden|pending|sticky|1|0|,?{,10})(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.article_custom.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>article_id-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(article_id)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article_id</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article_id</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.article_id.txp</string>
				</dict>
			</array>
		</dict>
		<key>article_id-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')([1-9]\d*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>article_image-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(article_image)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article_image.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article_image</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.article_image.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.article_image</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.article_image.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#article_image-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>article_image-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(align|escape|class|html_id|style|wraptag|thumbnail)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(html|1|0|center|left|right)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.article_image.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>atts-custom-valid</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(custom_attributes_here)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;="|')(custom_attribute_names)(?="|')</string>
					<key>name</key>
					<string>invalid.illegal.unknown.txp</string>
				</dict>
			</array>
		</dict>
		<key>atts-generic-invalid</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(custom_attributes_here)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;="|').*?(?="|')</string>
					<key>name</key>
					<string>invalid.illegal.unknown.txp</string>
				</dict>
			</array>
		</dict>
		<key>author-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(author)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.author.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.author</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.author.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.author</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.author.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#author-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>author-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(link|section|this_section)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.author.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>body-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(body)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.body.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.body</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.body.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.body</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.body.txp</string>
				</dict>
			</array>
		</dict>
		<key>breadcrumb-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(breadcrumb)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.breadcrumb.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.breadcrumb</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.breadcrumb.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.breadcrumb</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.breadcrumb.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#breadcrumb-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>breadcrumb-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(label|link|sep|wraptag|title|class|linkclass)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(y|n|::|-|p|li|noline)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.breadcrumb.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>category-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(category(1|2)?)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.category.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.category</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.category.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.category</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.category.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#category-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>category-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(class|link|name|section|this_section|title|type|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(category|0|1|article|image|link|file)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.category.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>category_list-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(category_list)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.category_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.category_list</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.category_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.category_list</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.category_list.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#category_list-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>category_list-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(active_class|break|categories|class|exclude|label|labeltag|parent|type|section|this_section|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(article|image|link|file|p|br|ul|li|,?|0|1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.category_list.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment_anchor-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_anchor)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_anchor.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_anchor</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_anchor.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_anchor</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_anchor.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_email-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_email)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_email.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_email</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_email.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_email</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_email.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_email_input-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_email_input)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_email_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_email_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_email_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_email_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_email_input.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_id-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_id)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_id</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_id</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_id.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_message-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_message)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_message.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_message</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_message.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_message</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_message.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_message_input-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_message_input)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_message_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_message_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_message_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_message_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_message_input.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_name-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_name)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_name.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_name</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_name.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_name</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_name.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_name_input-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_name_input)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_name_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_name_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_name_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_name_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_name_input.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_permlink-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(comment_permlink))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.comment_permlink.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.comment_permlink</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(comment_permlink))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(comment_permlink)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.permlink.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.comment_permlink.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_permlink-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment_permlink-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(anchor)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment_preview-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_preview)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_preview</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_preview</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_preview.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_remember-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_remember)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_remember.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_remember</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_remember.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_remember</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_remember.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_submit-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_submit)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_submit.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_submit</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_submit.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_submit</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_submit.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_time-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_time)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_time.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_time</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_time.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_time</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_time.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_time-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment_time-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(format)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(since)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.comment_time.txp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strftime-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment_web-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_web)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_web.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_web</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_web.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_web</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_web.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_web_input-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_web_input)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_web_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_web_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_web_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_web_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_web_input.txp</string>
				</dict>
			</array>
		</dict>
		<key>comment_web_preview-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comment_web_preview)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_web_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_web_preview</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comment_web_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comment_web_preview</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comment_web_preview.txp</string>
				</dict>
			</array>
		</dict>
		<key>comments-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id|class|form|wraptag|break|breakclass)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(comments|1-9\d{,3}|p|ul|li|br)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.comments.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_count-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments_count)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_count.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_count</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_count.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_count</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments_count.txp</string>
				</dict>
			</array>
		</dict>
		<key>comments_error-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments_error)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_error.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_error</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_error.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_error</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments_error.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments_error-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_error-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(break|wraptag|class)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(br|ul|li|p|,?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.comments_error.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_form-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments_form)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_form.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_form</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_form.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_form</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments_form.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments_form-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_form-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id|form|wraptag|class|preview)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(comments_form|0|1|,?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.comments_form.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_help-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments_help)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_help.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_help</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_help.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_help</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments_help.txp</string>
				</dict>
			</array>
		</dict>
		<key>comments_invite-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments_invite)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_invite.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_invite</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_invite.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_invite</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments_invite.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments_invite-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_invite-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(showcount|textonly|showalways|class|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((comments_invite|0|1|p|li){,10})(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.comments_invite.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_preview-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(comments_preview)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_preview</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.comments_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.comments_preview</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.comments_preview.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments_preview-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_preview-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(show_preview|form)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1|[w_]+)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.comment_preview.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>css-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(css)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.css.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.css</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.css.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.css</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.css.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#css-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>css-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(n)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')([\w_]{2,50})(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.css.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>custom_field-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(custom_field)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.custom_field.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.custom_field</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.custom_field.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.custom_field</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.custom_field.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#custom_field-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>custom_field-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name|escape|default)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((html|[\w_]{2,50}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.custom_field.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>die-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(die)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.die.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.die</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.die.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.die</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.die.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#die-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>die-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(msg|status)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')([1-5][0|1][0-8]|[\w{,120}\s+])(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.die.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>else-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(else)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.else.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.else</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.else.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.else</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.else.txp</string>
				</dict>
			</array>
		</dict>
		<key>email-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(email)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.email.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.email</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.email.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.email</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.email.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#email-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>email-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(email|linktext|title)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(.*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.email.txp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#name.other.email.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>error_message-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(error_message)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.error_message.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.error_message</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.error_message.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.error_message</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.error_message.txp</string>
				</dict>
			</array>
		</dict>
		<key>error_status-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(error_status)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.error_status.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.error_status</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.error_status.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.error_status</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.error_status.txp</string>
				</dict>
			</array>
		</dict>
		<key>excerpt-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(excerpt)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.excerpt.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.excerpt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.excerpt.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.excerpt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.excerpt.txp</string>
				</dict>
			</array>
		</dict>
		<key>feed_link-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(feed_link)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.feed_link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.feed_link</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.feed_link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.feed_link</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.feed_link.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#feed_link-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>feed_link-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(label|break|wraptag|category|limit|section|title|flavor)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(rss|atom|p|br|li|XML|article|[\d{1,4}]|Article\sFeed|Atom\s1.0|RSS\s0.92,?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.feed_link.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#file_download-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(form|id|filename)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([1-9\d{,3}]){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.file_download.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_category-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_category)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_category.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_category</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_category.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_category</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_category.txp</string>
				</dict>
			</array>
		</dict>
		<key>file_download_created-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_created)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_created.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_created</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_created.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_created</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_created.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#file_download_created-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_created-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(format)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((auto|%[abcdeghijmnprstuvwxyzABCDEGHIJMNPRSTUVWYZ]{1},?|,?){,10})?([,\w\d@#&amp;-_"']{,60}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.file_download_created.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_description-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_description)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_description.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_description</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_description.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_description</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_description.txp</string>
				</dict>
			</array>
		</dict>
		<key>file_download_downloads-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_downloads)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_downloads.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_downloads</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_downloads.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_downloads</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_downloads.txp</string>
				</dict>
			</array>
		</dict>
		<key>file_download_id-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_id)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_id</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_id</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_id.txp</string>
				</dict>
			</array>
		</dict>
		<key>file_download_link-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(file_download_link))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.file_download_link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.file_download_link</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(file_download_link))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(file_download_link)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.file_download_link.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.file_download_link.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#file_download_link-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_link-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(filename|id)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((1-9[\d]{,3}|,?){,10})(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_list-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_list)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_list</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_list</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_list.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#file_download_list-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_list-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(category|limit|sort|form|label|labeltag|wraptag|class|break)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((file_download_list|id|filename|category|files|dl|description|downloads|rand\(\)|asc|desc|date|[1-9][\d]{,3}|url|downloads\sasc|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.file_download_list.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_modified-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_modified)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_modified.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_modified</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_modified.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_modified</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_modified.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#file_download_modified-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_modified-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(format)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((%[abcdeghijmnprstuvwxyzABCDEGHIJMNPRSTUVWYZ]{1},?|auto|,?){,10} )(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.file_download_modified.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_name-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_name)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_name.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_name</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_name.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_name</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_name.txp</string>
				</dict>
			</array>
		</dict>
		<key>file_download_size-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(file_download_size)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_size.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_size</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.file_download_size.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.file_download_size</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.file_download_size.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#file_download_size-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>file_download_size-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(format|decimals)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((auto|b|kb|mb|gb|[2-9]|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.file_download_size.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_author-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(article_author)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_article_author.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_article_author</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_article_author.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.article_author.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(article_author)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_article_author.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(article_author))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_article_author.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_article_author.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_article_author-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_author-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((\w{2,45}|,?){,30}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_category-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(article_category)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_article_category.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_article_category</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_article_category.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.article_category.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(article_category)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_article_category.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(article_category))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_article_category.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_article_category.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_article_category-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_category-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name|number)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((1|2){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_id-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(article_id)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_article_id.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_article_id</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_article_id.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.article_id.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(article_id)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_article_id.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(article_id))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_article_id.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_article_id.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_article_id-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_id-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')([1-9]\d*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_list-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(article_list)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_article_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_article_list</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_article_list.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.article_list.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(article_list)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_article_list.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(article_list))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_article_list.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_article_list.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_article_section-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(article_section)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_article_section.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_article_section</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_article_section.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.article_section.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(article_section)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_article_section.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(article_section))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_article_section.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_article_section.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_article_section-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_article_section-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\w\d_]{2,20}|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_author-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(author)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_author.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_author</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_author.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.author.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(author)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_author.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(author))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_author.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_author.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_author-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_author-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\w\d]{1,30}|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_category-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(category)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_category.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_category</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_category.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.category.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(category)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_category.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(category))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_category.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_category.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_category-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_category-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(([\w\d_]{,25}|,?))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_comments-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(comments)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_comments.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_comments</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_comments.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.comments.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(comments)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_comments.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(comments))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_comments.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_comments.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_comments_allowed-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(comments_allowed)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_comments_allowed.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_comments_allowed</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_comments_allowed.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.comments_allowed.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(comments_allowed)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_comments_allowed.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(comments_allowed))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_comments_allowed.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_comments_allowed.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_comments_allowed-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_comments_allowed-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((1-9[d]{,3}){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_comments_disallowed-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(comments_disallowed)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_comments_disallowed.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_comments_disallowed</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_comments_disallowed.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.comments_disallowed.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(comments_disallowed)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_comments_disallowed.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(comments_disallowed))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_comments_disallowed.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_comments_disallowed.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_comments_disallowed-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_comments_disallowed-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((1-9[d]{,3}){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_comments_error-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(comments_error)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_comments_error.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_comments_error</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_comments_error.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.comments_error.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(comments_error)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_comments_error.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(comments_error))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_comments_error.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_comments_error.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_comments_preview-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(comments_preview)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_comments_preview.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_comments_preview</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_comments_preview.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.comments_preview.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(comments_preview)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_comments_preview.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(comments_preview))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_comments_preview.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_comments_preview.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_custom_field-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(custom_field)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_custom_field.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_custom_field</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_custom_field.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.custom_field.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(custom_field)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_custom_field.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(custom_field))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_custom_field.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_custom_field.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_custom_field-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_custom_field-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name|val)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((\w{25}|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_different-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(different)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_different.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_different</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_different.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.different.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(different)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_different.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(different))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_different.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_different.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_excerpt-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(excerpt)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_excerpt.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_excerpt</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_excerpt.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.excerpt.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(excerpt)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_excerpt.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(excerpt))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_excerpt.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_excerpt.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_first_article-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(first_article)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_first_article.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_first_article</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_first_article.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.first_article.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(first_article)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_first_article.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(first_article))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_first_article.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_first_article.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_individual_article-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(individual_article)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_individual_article.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_individual_article</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_individual_article.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.individual_article.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(individual_article)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_individual_article.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(individual_article))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_individual_article.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_individual_article.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_last_article-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(last_article)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_last_article.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_last_article</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_last_article.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.last_article.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(last_article)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_last_article.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(last_article))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_last_article.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_last_article.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_plugin-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(plugin)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_plugin.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_plugin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_plugin.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.plugin.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(plugin)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_plugin.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(plugin))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_plugin.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_plugin.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_plugin-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_plugin-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name|ver)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(\d)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_search-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(search)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_search.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_search</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_search.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.search.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(search)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_search.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(search))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_search.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_search.txp</string>
				</dict>
			</array>
		</dict>
		<key>if_section-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(section)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_section.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_section</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_section.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.section.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(section)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_status.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Those who have eyes to see, shall see the beauty of XML and Oniguruma Syntax.Ask and you shall be given.This is here as a demonstration about how many things are possible with TextMate. Uncle Oniguruma and his Incarnation Don Kosako are definitely our friends here
					However, the matching is not entirely correct this way yet, but it can be done.</string>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(section))))</string>
					<key>name</key>
					<string>block.conditional.if_section.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_section-tag</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#if_section-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_section.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_section.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_section-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_section-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(name)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\w\d]{1,30}|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_status-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)((if)(_)(status)))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.if_status.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.if_status</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if_status.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.conditional.status.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)((if)(_)(status)))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.if_status.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:((if)(_)(status))))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.container.tag.name.if_status.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid-illegal.terminator.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s?&gt;)|(\s?/&gt;)</string>
					<key>name</key>
					<string>meta.tag.container.if_status.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#if_status-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>if_status-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(status)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(([1-5][0|1][0-8]){,10})(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>image-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(image)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.image.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.image</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.image.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.image</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.image.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#image-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>image-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(align|class|escape|html_id|id|name|style|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(p|ol|ul|html|left|right|center|[1-9][\d]{,3}|,?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.image.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>image_display-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(image_display)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.image_display.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.image_display</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.image_display.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.image_display</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.image_display.txp</string>
				</dict>
			</array>
		</dict>
		<key>image_index-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(image_index)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.image_index.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.image_index</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.image_index.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.image_index</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.image_index.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#image_index-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>image_index-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(label|labeltag|parent|break|wraptag|c|type|class)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(image_index|article|image|link|file|doslash\(\$c\)|li|ol|p)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.image_index.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(keywords)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.keywords.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.keywords</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.keywords.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.keywords</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.keywords.txp</string>
				</dict>
			</array>
		</dict>
		<key>lang-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(lang)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.lang.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.lang</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.lang.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.lang</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.lang.txp</string>
				</dict>
			</array>
		</dict>
		<key>link-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(link)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.link.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(rel)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')([\w\s]+)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.link.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_date-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(link_date)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_date.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_date</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_date.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_date</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.link_date.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link_date-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_date-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(format|gmt|lang)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1|[%\w,?]{,8})(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.link_date.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_description-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(link_description)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_description.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_description</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_description.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_description</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.link_description.txp</string>
				</dict>
			</array>
		</dict>
		<key>link_feed_link-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(link_feed_link)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_feed_link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_feed_link</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_feed_link.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_feed_link</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.link_feed_link.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link_feed_link-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_feed_link-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(category|flavor|format|label|title|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(a|link|p|li|rss|atom|XML|[\w]{2,25}|,?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.link_feed_link.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_name-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(link_name)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_name.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_name</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_name.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_name</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.link_name.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link_name-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_name-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(escape)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(html)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.link_name.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_to_home-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(link_to_home))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.link_to_home.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.link_to_home</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(link_to_home))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(link_to_home)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.link_to_home.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.link_to_home.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link_to_home-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_to_home-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(class)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(\w*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_to_next-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(link_to_next))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.link_to_next.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.link_to_next</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(link_to_next))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(link_to_next)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.link_to_next.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.link_to_next.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link_to_next-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_to_next-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(showalways)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(1|0)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_to_prev-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(link_to_prev))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.link_to_prev.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.link_to_prev</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(link_to_prev))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(link_to_prev)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.link_to_prev.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.link_to_prev.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#link_to_prev-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_to_prev-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(showalways)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(1|0)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>link_url-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(link_url)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.link_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.link_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.link_url.txp</string>
				</dict>
			</array>
		</dict>
		<key>linkdesctitle-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(linkdesctitle)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.linkdesctitle.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.linkdesctitle</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.linkdesctitle.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.linkdesctitle</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.linkdesctitle.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#linkdesctitle-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>linkdesctitle-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(rel)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\w\d]{1,30}|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.linkdesctitle.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>linklist-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(linklist)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.linklist.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.linklist</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.linklist.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.linklist</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.linklist.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#linklist-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>linklist-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(form|label|labeltag|limit|break|wraptag|category|sort|class)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([1-9][\d]{,3}|plainlinks|linksort|linklist|p\b|ol|ul|hr|br|li|description\s|date\s|asc|desc|dl|linkname\s?|rand\(\)|url|date){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.linklist.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>message-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(message)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.message.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.message</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.message.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.message</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.message.txp</string>
				</dict>
			</array>
		</dict>
		<key>meta_author-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(meta_author)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.meta_author.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.meta_author</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.meta_author.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.meta_author</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.meta_author.txp</string>
				</dict>
			</array>
		</dict>
		<key>meta_keywords-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(meta_keywords)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.meta_keywords.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.meta_keywords</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.meta_keywords.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.meta_keywords</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.meta_keywords.txp</string>
				</dict>
			</array>
		</dict>
		<key>newer-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(newer))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.newer.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.newer</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(newer))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(newer)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.newer.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.newer.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#newer-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>newer-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(showalways)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>next_title-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(next_title)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.next_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.next_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.next_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.next_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.next_title.txp</string>
				</dict>
			</array>
		</dict>
		<key>older-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(older))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.older.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.older</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(older))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(older)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.older.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.older.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#older-tagatts</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-custom-valid</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#atts-generic-invalid</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>older-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(showalways)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>output_form-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(output_form)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.output_form.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.output_form</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.output_form.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.output_form</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.output_form.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#output_form-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>output_form-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(form)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((\w{2,45}|,?){,30}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.outputform.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>page_title-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(page_title)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.page_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.page_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.page_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.page_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.page_title.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#page_title-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>page_title-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(separator)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(((:{1,3}|\||,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.page_title.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>page_url-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(page_url)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.page_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.page_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.page_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.page_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.page_url.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#page_url-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>page_url-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(id|s|c|pg|month|author|status)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(.*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.page_url.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>password_protect-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(password_protect)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.password_protect.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.password_protect</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.password_protect.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.password_protect</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.password_protect.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#password_protect-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>password_protect-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(login|pass)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(.*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.password_protect.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>permlink-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;((txp:)(permlink))\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.permlink.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.container.tag.name</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>txp.container.tag.name.permlink</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(((txp:)(permlink))&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&gt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.permlink.txp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((&lt;/)(?=txp:(permlink)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>\s?&gt;</string>
					<key>name</key>
					<string>meta.tag.container.permlink.txp</string>
				</dict>
			</array>
		</dict>
		<key>permlinks-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(permlink\b\s))</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.permlink.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.permlink</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\s?/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.permlink.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.permlinks</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(\s/&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.permlinks.txp</string>
				</dict>
			</array>
		</dict>
		<key>plugin_end-tag</key>
		<dict>
			<key>begin</key>
			<string>(((&lt;/))(txp:)(([a-z]{3})(_[a-z]{2,60}))(_[a-z]{2,60}){,8})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.tag.plugin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>string.constant.creator-index.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.plugin.name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp.test</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.tag.plugin.endbracket.txpt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>include</key>
					<string>#plugin_tag-tagatts</string>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp</string>
				</dict>
			</array>
		</dict>
		<key>plugin_end_special-tag</key>
		<dict>
			<key>begin</key>
			<string>(((?&lt;=&gt;)(&lt;/))(txp:)(([a-z]{3})(_[a-z]{2,60}))(_[a-z]{2,60}){,8})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.tag.plugin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.tag.container.endbracket.txp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>string.constant.creator-index.txp</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.tag.plugin.name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp.test</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.tag.plugin.endbracket.txp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>include</key>
					<string>#plugin_tag-tagatts</string>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp</string>
				</dict>
			</array>
		</dict>
		<key>plugin_start-tag</key>
		<dict>
			<key>begin</key>
			<string>((&lt;)(txp:)(([a-z]{3})(_[a-z]{2,60}))(_[a-z]{2,60}){,8})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.tag.plugin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.startbracket.txp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>string.constant.creator-index.txp</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>entity.tag.plugin.name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/?&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp.test</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.tag.container.endbracket.txpt</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((\s?/?)(?=&gt;))</string>
					<key>include</key>
					<string>#plugin_tag-tagatts</string>
					<key>name</key>
					<string>meta.tag.plugin.generic.txp</string>
				</dict>
			</array>
		</dict>
		<key>plugin_tag-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(.*?)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.attribute.name.plugin.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.tag.plugin.generic.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(.*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>popup-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(popup)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.popup.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.popup</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.popup.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.popup</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.popup.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#popup-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>popup-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(label|type|wraptag|section|this_section)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1|s|c)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.popup.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>popup_comments-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(popup_comments)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.popup_comments.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.popup_comments</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.popup_comments.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.popup_comments</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.popup_comments.txp</string>
				</dict>
			</array>
		</dict>
		<key>posted-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(posted)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.posted.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.posted</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.posted.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.posted</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.posted.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#posted-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>posted-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(class|format|gmt|lang|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1|since|ol|ul|p)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.posted.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>prev_title-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(prev_title)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.prev_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.prev_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.prev_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.prev_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.prev_title.txp</string>
				</dict>
			</array>
		</dict>
		<key>recent_articles-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(recent_articles)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.recent_articles.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.recent_articles</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.recent_articles.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.recent_articles</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.recent_articles.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#recent_articles-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>recent_articles-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(label|labeltag|limit|break|wraptag|category|sort|sortdir|class)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(([1-9][\d]{,3}|plainlinks|linksort|linklist|p\b|ol|ul|hr|br|li|description\s|date\s|asc|desc|dl|linkname\s?|rand\(\)|url|date))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.recent_articles.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>related_articles-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(related_articles)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.related_articles.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.related_articles</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.related_articles.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.related_articles</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.related_articles.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#related_articles-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>related_articles-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(label|labeltag|limit|break|wraptag|class)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\d{4}]|li|ul|p|ol|hr|br|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.related_articles.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_input-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(search_input)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_input.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_input</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.search_input.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#search_input-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_input-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(section|label|button|size|wraptag|form)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\d{2}]|p|ul|ol|search_input|[\w{30}_{5}]|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.search_input.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_result_count-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(search_result_count)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_count.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_count</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_count.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_count</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.search_result_count.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#search_result_count-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_result_count-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(text)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(articles\sfound)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.search_result_count.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_result_date-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(search_result_date)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_date.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_date</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_date.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_date</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.search_result_date.txp</string>
				</dict>
			</array>
		</dict>
		<key>search_result_excerpt-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(search_result_excerpt)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_excerpt.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_excerpt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_excerpt.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_excerpt</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.search_result_excerpt.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#search_result_excerpt-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_result_excerpt-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(limit|hilight)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')((([\d{,3}]|strong|cite|em|p|li|dd|span|,?){,10}))(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.search_result_excerpt.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>search_result_title-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(search_result_title)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.search_result_title.txp</string>
				</dict>
			</array>
		</dict>
		<key>search_result_url-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(search_result_url)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.search_result_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.search_result_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.search_result_url.txp</string>
				</dict>
			</array>
		</dict>
		<key>section-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(section)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.section.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.section</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.section.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.section</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.section.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#section-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>section-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(title|link|wraptag|name)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(.*?)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.section.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>section_list-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(section_list)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.section_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.section_list</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.section_list.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.section_list</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.section_list.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#section_list-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>section_list-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(active_class|break|class|default_title|exclude|include|include_default|label|labeltag|sections|sortby|wraptag|title)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(ol|ul|li|hr|br|p|1|0)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.section_list.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>site_slogan-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(site_slogan)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.site_slogan.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.site_slogan</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.site_slogan.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.site_slogan</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.site_slogan.txp</string>
				</dict>
			</array>
		</dict>
		<key>site_url-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(site_url)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.site_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.site_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.site_url.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.site_url</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.site_url.txp</string>
				</dict>
			</array>
		</dict>
		<key>sitename-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(sitename)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.sitename.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.sitename</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.sitename.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.sitename</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.sitename.txp</string>
				</dict>
			</array>
		</dict>
		<key>text-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(text)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.text.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.text</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.text.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.text</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.text.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#text-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>text-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(item)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')([.*?])(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.text.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>thumbnail-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(thumbnail)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.thumbnail.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.thumbnail</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.thumbnail.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.thumbnail</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.thumbnail.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#thumbnail-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>thumbnail-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(align|class|escape|html_id|id|name|style|poplink|wraptag)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.thumbnail.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>title-tag</key>
		<dict>
			<key>begin</key>
			<string>(&lt;(txp:)(title)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.constant.prefix.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/&gt;|(&gt;))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.single.title.txp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.single.tag.title</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.terminator.txp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string></string>
					<key>end</key>
					<string>(?=/&gt;|&gt;)</string>
					<key>name</key>
					<string>meta.tag.single.title.txp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#title-tagatts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>title-tagatts</key>
		<dict>
			<key>applyEndPatternLast</key>
			<string>1</string>
			<key>begin</key>
			<string>(no_widow)\s*=\s*(?=(["']).*?["'])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.txp</string>
				</dict>
			</dict>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.attribute-with-value.txp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!"|')"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;="|')(0|1)(?="|')</string>
							<key>name</key>
							<string>variable.attribute.value.known.title.txp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.html.txp</string>
	<key>uuid</key>
	<string>6CCBF680-82A7-4B69-A94F-14D0397BBEE5</string>
</dict>
</plist>
